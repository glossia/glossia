name: Glossia
on:
  push:
    branches:
      - main
  pull_request: {}

env:
  MISE_EXPERIMENTAL: "1"
  MISE_GITHUB_TOKEN: ${{ secrets.GLOSSIA_GITHUB_TOKEN }}
  MISE_SOPS_AGE_KEY: ${{ secrets.MISE_SOPS_AGE_KEY }}

jobs:
  build-image:
    name: Build image
    runs-on: debian-latest
    container:
      image: node:20-bookworm
      options: >-
        --privileged
      env:
        DOCKER_HOST: "tcp://docker:2375"
        DOCKER_TLS_CERTDIR: ""
    services:
      docker:
        image: docker:24.0.5-dind
        options: >-
          --privileged
        env:
          DOCKER_TLS_CERTDIR: ""
    steps:
      - uses: actions/checkout@v3
      - name: Install Docker
        run: |
          apt-get update
          apt-get install -y ca-certificates curl gnupg
          install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
          chmod a+r /etc/apt/keyrings/docker.asc
          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update
          apt-get install -y docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - name: Build image
        run: |
          docker build -t glossia .
  check:
    name: Static checks
    runs-on: debian-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - uses: jdx/mise-action@v2
        with:
          cache: true
      - run: mise run check
  build:
    name: Build
    runs-on: debian-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - uses: jdx/mise-action@v2
        with:
          cache: true
      - run: mise run build
  test:
    name: Test
    runs-on: debian-latest
    env:
      MIX_ENV: test
      DATABASE_HOSTNAME: db
    services:
      db:
        image: postgres:17
        ports: ["5432:5432"]
        env:
          POSTGRES_USER: postgres
          POSTGRES_DB: test
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v4
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-test-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-test
      - uses: jdx/mise-action@v2
        with:
          cache: true
      - run: mise run test
