name: Release
on:
  push:
    branches:
      - main

env:
  MISE_EXPERIMENTAL: "1"
  MISE_GITHUB_TOKEN: ${{ secrets.GLOSSIA_GITHUB_TOKEN }}
  MISE_SOPS_AGE_KEY: ${{ secrets.MISE_SOPS_AGE_KEY }}

jobs:
  glossia:
    name: Glossia
    runs-on: debian-latest
    container:
      image: node:20-bookworm
      volumes:
        - "/certs:/certs"
    services:
      docker:
        image: docker:dind
        privileged: true
        options: >-
          --privileged
        env:
          DOCKER_TLS_CERTDIR: ""
    env:
      DOCKER_HOST: tcp://docker:2375
      DOCKER_TLS_CERTDIR: ""
    steps:
      - uses: actions/checkout@v3
      - run: |
          apt-get update
          apt-get install -y ca-certificates curl
          install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
          chmod a+r /etc/apt/keyrings/docker.asc

          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update
          apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - uses: https://github.com/jdx/mise-action@v2
        with:
          cache: true
      - name: Verify Docker connection
        run: |
          # Wait for Docker daemon to be ready
          timeout=30
          while ! docker info &>/dev/null && [ $timeout -gt 0 ]; do
            echo "Waiting for Docker daemon to be ready... ($timeout seconds left)"
            sleep 1
            timeout=$((timeout-1))
          done
          if [ $timeout -eq 0 ]; then
            echo "Timed out waiting for Docker daemon"
            exit 1
          fi
          docker info
      - run: mise run release
